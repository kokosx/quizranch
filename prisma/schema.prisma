// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @default(uuid()) @unique @id
  email String @unique
  nickname String @unique
  password String 
  description String?

  avatarSeed String?

  sessions Session[]
  kits Kit[]
  progresses Progress[]
  notes Note[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Note {
  id String @default(uuid()) @id
  user User @relation(fields: [createdBy],references: [id], onDelete: Cascade)
  createdBy String
  name String
  data String
  visibility String
  
  createdAt DateTime @default(now())
}

model Kit {
  id String @default(uuid()) @unique @id

  user User @relation(fields: [createdBy],references: [id], onDelete: Cascade)
  createdBy String

  name String
  description String @default("")


  createdAt DateTime @default(now())
  
  questions KitQuestion[]
  progress Progress[]

}

model KitQuestion {
  id String @default(uuid()) @id

  question String
  answer String

  kitId String
  kit Kit @relation(fields: [kitId],references: [id],onDelete: Cascade)
}

model Progress {
  id String @default(uuid()) @id
  user User @relation(fields: [createdBy],references: [id], onDelete: Cascade)
  createdBy String
  kitId String
  kit Kit @relation(fields: [kitId],references: [id],onDelete: Cascade)
  learnt String[]
}


model Session {
  id String  @id @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  csrfTokens CsrfToken?
}

model CsrfToken {
  id String @id @unique
  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String @unique
} 